{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "mytestingdatafactory203"
		},
		"azuresqlconn_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'azuresqlconn'"
		},
		"dsGenericAzureSql_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'dsGenericAzureSql'"
		},
		"lsAdlsG2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'lsAdlsG2'"
		},
		"lsAzureDb_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'lsAzureDb'"
		},
		"lsGenericAzureSql_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'lsGenericAzureSql'"
		},
		"lsAdlsG2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://firstsgtest.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Dynamic Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get a list of tables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT QUOTENAME(t.name) AS tableName, QUOTENAME(SCHEMA_NAME(t.schema_id)) AS schemaName from sys.tables as t",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsGenericAzureSqlTable",
								"type": "DatasetReference",
								"parameters": {
									"dsDbNme": {
										"value": "@pipeline().parameters.pipDbName",
										"type": "Expression"
									},
									"dsSrvrNme": {
										"value": "@pipeline().parameters.pipSrvrNme",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "iterate over tables",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get a list of tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get a list of tables').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data from tables",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT * FROM ',item().schemaName,'.',item().tablename)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "dsGenericAzureSqlTable",
											"type": "DatasetReference",
											"parameters": {
												"dsDbNme": {
													"value": "@pipeline().parameters.pipDbName",
													"type": "Expression"
												},
												"dsSrvrNme": {
													"value": "@pipeline().parameters.pipSrvrNme",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dsGenericAdlsG2",
											"type": "DatasetReference",
											"parameters": {
												"serverName": {
													"value": "@pipeline().parameters.pipSrvrNme",
													"type": "Expression"
												},
												"databaseName": {
													"value": "@pipeline().parameters.pipDbName",
													"type": "Expression"
												},
												"schemaName": {
													"value": "@item().schemaName",
													"type": "Expression"
												},
												"tableName": {
													"value": "@item().tableName",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"pipSrvrNme": {
						"type": "string",
						"defaultValue": "sqltesta.database.windows.net"
					},
					"pipDbName": {
						"type": "string",
						"defaultValue": "AdventureWorks"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsGenericAzureSqlTable')]",
				"[concat(variables('factoryId'), '/datasets/dsGenericAdlsG2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/myFirstPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LkUp_LastModifiedSales",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select max(ModifiedDate) as lastModified From [SalesLT].[SalesOrderDetail]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipIncrementalDataLoad')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "this is an example of how to do an incremental data load leveraging the watermark table strategy",
				"activities": [
					{
						"name": "sales data previous water mark",
						"description": "look up the previous watermark for the sales data from the watermark table. ",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT max(latestProcessDate) as latestProcessDate  FROM [dbo].[tblWaterMark] where itemnme = '[SalesLT].[SalesOrderDetail]'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsGenericAzureSqlTable",
								"type": "DatasetReference",
								"parameters": {
									"dsDbNme": {
										"value": "@pipeline().parameters.pipDbNme",
										"type": "Expression"
									},
									"dsSrvrNme": {
										"value": "@pipeline().parameters.pipServerNme",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "sales data new water mark",
						"description": "look up the last record in the sales order detail table.. and get the last modified date.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT max(ModifiedDate) FROM [SalesLT].[SalesOrderDetail]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsGenericAzureSqlTable",
								"type": "DatasetReference",
								"parameters": {
									"dsDbNme": {
										"value": "@pipeline().parameters.pipDbNme",
										"type": "Expression"
									},
									"dsSrvrNme": {
										"value": "@pipeline().parameters.pipServerNme",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"pipDbNme": {
						"type": "string",
						"defaultValue": "AdventureWorks"
					},
					"pipServerNme": {
						"type": "string",
						"defaultValue": "sqltesta.database.windows.net"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsGenericAzureSqlTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsAzureDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsAzureDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlcustomers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azuresqlconn",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NameStyle",
						"type": "bit"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "CompanyName",
						"type": "nvarchar"
					},
					{
						"name": "SalesPerson",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					},
					{
						"name": "PasswordHash",
						"type": "varchar"
					},
					{
						"name": "PasswordSalt",
						"type": "varchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Customer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azuresqlconn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsGenericAdlsG2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsAdlsG2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"serverName": {
						"type": "string"
					},
					"databaseName": {
						"type": "string"
					},
					"schemaName": {
						"type": "string"
					},
					"tableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(\n        trim(\n            replace(\n                replace(dataset().schemaName,'[','')\n                ,']','')\n                  )\n        ,'_'\n        ,trim(\n            replace(\n                replace(dataset().tableName,'[','')\n            ,']','')\n            )\n        ,'.parquet')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(dataset().serverName\n,'/'\n,trim(\n            replace(\n                replace(dataset().databaseName,'[','')\n            ,']','')\n            )\n,'/'\n,trim(\n            replace(\n                replace(dataset().tableName,'[','')\n            ,']','')\n            )\n,'/ingress'\n,'/year='\n,formatDateTime(utcnow(),'yyyy')\n,'/month='\n,formatDateTime(utcnow(),'MM')\n,'/day='\n,formatDateTime(utcnow(),'dd')\n)",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsAdlsG2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsGenericAzureSqlTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsGenericAzureSql",
					"type": "LinkedServiceReference",
					"parameters": {
						"lsDbName": {
							"value": "@dataset().dsDbNme",
							"type": "Expression"
						},
						"lsSrvrName": {
							"value": "@dataset().dsSrvrNme",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"dsDbNme": {
						"type": "string"
					},
					"dsSrvrNme": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsGenericAzureSql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azuresqlconn')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('azuresqlconn_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsGenericAzureSql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"dbName": {
						"type": "string"
					},
					"srvrName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('dsGenericAzureSql_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lsAdlsG2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Generic connection to the data lake",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('lsAdlsG2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('lsAdlsG2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lsAzureDb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Main link to the azure sql database that I am using This is leveraging adventure works db",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('lsAzureDb_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lsGenericAzureSql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Generic azure sql connector. It would get its connection properties from the data set at run time",
				"parameters": {
					"lsDbName": {
						"type": "string"
					},
					"lsSrvrName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('lsGenericAzureSql_connectionString')]"
				}
			},
			"dependsOn": []
		}
	]
}